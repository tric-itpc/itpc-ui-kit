"use strict";(self.webpackChunkitpc_ui_kit=self.webpackChunkitpc_ui_kit||[]).push([[833],{"./src/components/form/Form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Large:()=>Large,Medium:()=>Medium,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_buttons_Button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/buttons/Button/index.tsx"),_inputs_Checkbox__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/inputs/Checkbox/index.tsx"),_inputs_DatePicker__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/inputs/DatePicker/index.tsx"),_inputs_NumberField__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/inputs/NumberField/index.tsx"),_inputs_SelectField__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/inputs/SelectField/index.tsx"),_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/inputs/TextField/index.tsx"),_layout_Flex__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/layout/Flex/index.tsx"),_Form__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/form/Form.tsx"),_FormField__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/form/FormField.tsx"),_FormItem__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/components/form/FormItem.tsx"),_hooks_useForm__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./src/components/form/hooks/useForm.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_Form__WEBPACK_IMPORTED_MODULE_8__.l,parameters:{docs:{description:{component:"### Компоненты для построения форм\n- **Form** — оборачивает форму, управляет состоянием и валидацией\n- **FormItem** — вручную используется для отображения поля, прокидывает value, onChange, ошибки\n- **FormField** — автоматическая обёртка над FormItem + компонентом поля, проставляет valuePropName и getValueFromEvent автоматически\n- **FormContext** — используется внутри, содержит значения, ошибки, методы валидации и регистрации полей\n\nИспользуйте **FormField** для интеграции с UI-китом. **FormItem** применяйте для сторонних компонентов или ручной настройки."}}},subcomponents:{FormField:_FormField__WEBPACK_IMPORTED_MODULE_9__.z,FormItem:_FormItem__WEBPACK_IMPORTED_MODULE_10__.e},title:"Form/Form"},SmallForm=()=>{const form=(0,_hooks_useForm__WEBPACK_IMPORTED_MODULE_11__.m)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Form__WEBPACK_IMPORTED_MODULE_8__.l,{form},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"email",placeholder:"Email",required:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_Checkbox__WEBPACK_IMPORTED_MODULE_2__.S,componentProps:{label:"Согласие"},name:"agree",placeholder:"Согласие"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttons_Button__WEBPACK_IMPORTED_MODULE_1__.$,{type:"submit"},"Отправить"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Значения формы: ",JSON.stringify(form.getFieldsValue(),null,2)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Ошибки формы: ",JSON.stringify(form.getFieldsError(),null,2)))},Small={name:"Маленькая форма",parameters:{docs:{source:{code:'\nconst SmallForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form}>\n        <FormField\n          component={TextField}\n          name="email"\n          placeholder="Email"\n          required\n        />\n        <FormField\n          component={Checkbox}\n          componentProps={{ label: "Согласие" }}\n          name="agree"\n          placeholder="Согласие"\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}'}}},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SmallForm,null)},MediumForm=()=>{const form=(0,_hooks_useForm__WEBPACK_IMPORTED_MODULE_11__.m)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Form__WEBPACK_IMPORTED_MODULE_8__.l,{form},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"fullName",placeholder:"ФИО",rules:[{message:"Введите ФИО",required:!0}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_NumberField__WEBPACK_IMPORTED_MODULE_4__.o,name:"age",placeholder:"Возраст"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{componentProps:{items:[{id:"m",value:"Мужской"},{id:"f",value:"Женский"}]},component:_inputs_SelectField__WEBPACK_IMPORTED_MODULE_5__.z,name:"gender",placeholder:"Пол"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_DatePicker__WEBPACK_IMPORTED_MODULE_3__.l,name:"birthDate",placeholder:"Дата рождения",required:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttons_Button__WEBPACK_IMPORTED_MODULE_1__.$,{type:"submit"},"Отправить"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Значения формы: ",JSON.stringify(form.getFieldsValue(),null,2)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Ошибки формы: ",JSON.stringify(form.getFieldsError(),null,2)))},Medium={name:"Средняя форма",parameters:{docs:{source:{code:'\nconst MediumForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form}>\n        <FormField\n          component={TextField}\n          name="fullName"\n          placeholder="ФИО"\n          rules={[{ message: "Введите ФИО", required: true }]}\n        />\n        <FormField component={NumberField} name="age" placeholder="Возраст" />\n        <FormField\n          componentProps={{\n            items: [\n              { id: "m", value: "Мужской" },\n              { id: "f", value: "Женский" },\n            ],\n          }}\n          component={SelectField}\n          name="gender"\n          placeholder="Пол"\n        />\n        <FormField\n          component={DatePicker}\n          name="birthDate"\n          placeholder="Дата рождения"\n          required\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}'}}},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MediumForm,null)},LargeForm=()=>{const form=(0,_hooks_useForm__WEBPACK_IMPORTED_MODULE_11__.m)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Form__WEBPACK_IMPORTED_MODULE_8__.l,{onFailure:errors=>{console.log("Submit error form",errors)},onFinish:values=>{console.log("Submit form",values)},form,initialValues:{agree:!0}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_layout_Flex__WEBPACK_IMPORTED_MODULE_7__.s,{gap:12,vertical:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"name",placeholder:"Имя"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"surname",placeholder:"Фамилия"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"phone",placeholder:"Телефон"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"email",placeholder:"Email"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{rules:[{validator:v=>10!==v?.length&&{message:"Введите правильное значение паспорта (10 символов)"}}],component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"passport",placeholder:"Паспорт"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"issuedBy",placeholder:"Кем выдан"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"inn",placeholder:"ИНН"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"snils",placeholder:"СНИЛС"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_TextField__WEBPACK_IMPORTED_MODULE_6__.A,name:"address",placeholder:"Адрес"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FormField__WEBPACK_IMPORTED_MODULE_9__.z,{component:_inputs_Checkbox__WEBPACK_IMPORTED_MODULE_2__.S,componentProps:{label:"Согласие"},name:"largeAgree",placeholder:"Согласие"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttons_Button__WEBPACK_IMPORTED_MODULE_1__.$,{type:"submit"},"Отправить"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Значения формы: ",JSON.stringify(form.getFieldsValue(),null,2)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,"Ошибки формы: ",JSON.stringify(form.getFieldsError(),null,2)))},Large={name:"Большая форма",parameters:{docs:{source:{code:'\nconst LargeForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form} initialValues={{ agree: true }}>\n        <FormField component={TextField} name="name" placeholder="Имя" />\n        <FormField component={TextField} name="surname" placeholder="Фамилия" />\n        <FormField component={TextField} name="phone" placeholder="Телефон" />\n        <FormField component={TextField} name="email" placeholder="Email" />\n        <FormField\n          rules={[\n            {\n              validator: (v) =>\n                v?.length !== 10 && {\n                  message: "Введите правильное значение паспорта (10 символов)",\n                },\n            },\n          ]}\n          component={TextField}\n          name="passport"\n          placeholder="Паспорт"\n        />\n        <FormField\n          component={TextField}\n          name="issuedBy"\n          placeholder="Кем выдан"\n        />\n        <FormField component={TextField} name="inn" placeholder="ИНН" />\n        <FormField component={TextField} name="snils" placeholder="СНИЛС" />\n        <FormField component={TextField} name="address" placeholder="Адрес" />\n        <FormField\n          component={Checkbox}\n          componentProps={{ label: "Согласие" }}\n          name="agree"\n          placeholder="Согласие"\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}'}}},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(LargeForm,null)},__namedExportsOrder=["Small","Medium","Large"];Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'{\n  name: "Маленькая форма",\n  parameters: {\n    docs: {\n      source: {\n        code: `\nconst SmallForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form}>\n        <FormField\n          component={TextField}\n          name="email"\n          placeholder="Email"\n          required\n        />\n        <FormField\n          component={Checkbox}\n          componentProps={{ label: "Согласие" }}\n          name="agree"\n          placeholder="Согласие"\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}`\n      }\n    }\n  },\n  render: () => <SmallForm />\n}',...Small.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:'{\n  name: "Средняя форма",\n  parameters: {\n    docs: {\n      source: {\n        code: `\nconst MediumForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form}>\n        <FormField\n          component={TextField}\n          name="fullName"\n          placeholder="ФИО"\n          rules={[{ message: "Введите ФИО", required: true }]}\n        />\n        <FormField component={NumberField} name="age" placeholder="Возраст" />\n        <FormField\n          componentProps={{\n            items: [\n              { id: "m", value: "Мужской" },\n              { id: "f", value: "Женский" },\n            ],\n          }}\n          component={SelectField}\n          name="gender"\n          placeholder="Пол"\n        />\n        <FormField\n          component={DatePicker}\n          name="birthDate"\n          placeholder="Дата рождения"\n          required\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}`\n      }\n    }\n  },\n  render: () => <MediumForm />\n}',...Medium.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  name: "Большая форма",\n  parameters: {\n    docs: {\n      source: {\n        code: `\nconst LargeForm = () => {\n  const form = useForm()\n\n  return (\n    <>\n      <Form form={form} initialValues={{ agree: true }}>\n        <FormField component={TextField} name="name" placeholder="Имя" />\n        <FormField component={TextField} name="surname" placeholder="Фамилия" />\n        <FormField component={TextField} name="phone" placeholder="Телефон" />\n        <FormField component={TextField} name="email" placeholder="Email" />\n        <FormField\n          rules={[\n            {\n              validator: (v) =>\n                v?.length !== 10 && {\n                  message: "Введите правильное значение паспорта (10 символов)",\n                },\n            },\n          ]}\n          component={TextField}\n          name="passport"\n          placeholder="Паспорт"\n        />\n        <FormField\n          component={TextField}\n          name="issuedBy"\n          placeholder="Кем выдан"\n        />\n        <FormField component={TextField} name="inn" placeholder="ИНН" />\n        <FormField component={TextField} name="snils" placeholder="СНИЛС" />\n        <FormField component={TextField} name="address" placeholder="Адрес" />\n        <FormField\n          component={Checkbox}\n          componentProps={{ label: "Согласие" }}\n          name="agree"\n          placeholder="Согласие"\n        />\n\n        <Button type="submit">Отправить</Button>\n      </Form>\n\n      {\n        <pre>\n          Значения формы: {JSON.stringify(form.getFieldsValue(), null, 2)}\n        </pre>\n      }\n      {\n        <pre>\n          Ошибки формы: {JSON.stringify(form.getFieldsError(), null, 2)}\n        </pre>\n      }\n    </>\n  )\n}`\n      }\n    }\n  },\n  render: () => <LargeForm />\n}',...Large.parameters?.docs?.source}}}}}]);